# Generated by Django 5.0.1 on 2025-01-30 14:56

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dipendenti', '0076_servizio_cdc'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalDipendente',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, verbose_name='Codice Identificativo')),
                ('matricola', models.CharField(max_length=6, verbose_name='Matricola')),
                ('badge_p', models.CharField(blank=True, max_length=8, null=True, verbose_name='Numero Badge apertura porte')),
                ('nome', models.CharField(max_length=40, verbose_name='Nome')),
                ('cognome', models.CharField(max_length=40, verbose_name='Cognome')),
                ('indirizzo', models.CharField(blank=True, max_length=120, null=True, verbose_name='Via e numero civico')),
                ('citta', models.CharField(blank=True, max_length=120, null=True, verbose_name='CAP e citt√† di residenza')),
                ('data_nascita', models.DateField(blank=True, null=True, verbose_name='Data di nascita')),
                ('luogo_nascita', models.CharField(blank=True, max_length=100, null=True, verbose_name='Luogo di nascita')),
                ('codicefiscale', models.CharField(blank=True, max_length=16, null=True, verbose_name='Codice Fiscale')),
                ('sesso', models.CharField(blank=True, choices=[('M', 'Maschio'), ('F', 'Femmina'), ('*', 'Non Binario')], max_length=1, null=True, verbose_name='Sesso')),
                ('patentino', models.CharField(blank=True, choices=[('A2', 'Patentino A2'), ('B1', 'Patentino B1'), ('B2', 'Patentino B2'), ('C1', 'Patentino C1')], max_length=2, null=True, verbose_name='Patentino di bilinguismo')),
                ('userid', models.CharField(max_length=16, verbose_name='Nome Utente')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='E-mail')),
                ('telefono', models.CharField(blank=True, max_length=40, null=True, verbose_name='Telefono')),
                ('cellulare', models.CharField(blank=True, max_length=40, null=True, verbose_name='Cellulare')),
                ('catprotetta', models.BooleanField(default=False, verbose_name='Categoria Protetta')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note aggiuntive')),
                ('attivo', models.BooleanField(default=True, verbose_name='Utente attivo')),
                ('titprinc_it', models.CharField(blank=True, help_text='Se valorizzato, sovrascrive qualunque altro titolo previsto.', max_length=140, null=True, verbose_name='Titolo principale in italiano')),
                ('titprinc_dt', models.CharField(blank=True, help_text='Se valorizzato, sovrascrive qualunque altro titolo previsto.', max_length=140, null=True, verbose_name='Titolo principale in tedesco')),
                ('det_cessazione', models.TextField(blank=True, max_length=100, null=True, verbose_name='Determina / delibera di cessazione')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Dipendente',
                'verbose_name_plural': 'historical Dipendenti',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
