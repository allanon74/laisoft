# Generated by Django 4.2.7 on 2023-12-27 14:41

import colorfield.fields
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dipendenti', '0042_dipendente_badge_p'),
    ]

    operations = [
        migrations.CreateModel(
            name='Anno',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('anno', models.CharField(max_length=4, verbose_name='Anno')),
            ],
            options={
                'verbose_name': 'Anno',
                'verbose_name_plural': 'Anni',
            },
        ),
        migrations.CreateModel(
            name='Attivita',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('nome_breve', models.CharField(max_length=30, verbose_name='Nome Breve per riferimenti interni')),
                ('nome_it', models.CharField(max_length=40, verbose_name="Nome italiano per l'interfaccia")),
                ('nome_de', models.CharField(max_length=40, verbose_name="Nome tedesco per l'interfaccia")),
                ('descrizione_it', models.TextField(verbose_name='Descrizione italiana per interfaccia')),
                ('descrizione_de', models.TextField(verbose_name='Descrizione tedesca per interfaccia')),
                ('colore', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
                ('obbligo_foto', models.BooleanField(default=False, help_text='Se selezionato, impedisce di chiudere un lavoro se non sono caricate le foto iniziale e finale.', verbose_name='Obbligo foto')),
                ('chiusura_auto_lavoro', models.BooleanField(default=False, help_text='Se selezionato, rende non obbligatoria la verifica del caposquadra per la chiusura dei lavori.', verbose_name='Chiusura automatica dei lavori')),
                ('tempo_stimato', models.IntegerField(help_text='Il valore si intende indicato in ore/uomo', verbose_name='Tempo stimato di soluzione')),
                ('tempo_aumento', models.IntegerField(help_text='Tempo dopo il quale la priorità aumenta di grado. Il valore si intende indicato in giornate', verbose_name='Tempo di aumento della priorità')),
            ],
            options={
                'verbose_name': 'Mansione',
                'verbose_name_plural': 'Mansioni',
            },
        ),
        migrations.CreateModel(
            name='CdC',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('nome_breve', models.CharField(max_length=30, verbose_name='Nome Breve per riferimenti interni')),
                ('nome_it', models.CharField(max_length=40, verbose_name="Nome italiano per l'interfaccia")),
                ('nome_de', models.CharField(max_length=40, verbose_name="Nome tedesco per l'interfaccia")),
                ('descrizione_it', models.TextField(verbose_name='Descrizione italiana per interfaccia')),
                ('descrizione_de', models.TextField(verbose_name='Descrizione tedesca per interfaccia')),
                ('colore', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
                ('note', models.TextField(blank=True, null=True, verbose_name='Annotazioni')),
            ],
            options={
                'verbose_name': 'Centro di costo',
                'verbose_name_plural': 'Centri di costo',
            },
        ),
        migrations.CreateModel(
            name='Collaboratore',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('telefono', models.CharField(max_length=15, verbose_name='Telefono')),
                ('responsabile', models.BooleanField(default=False, verbose_name='Responsabile di strutture')),
            ],
            options={
                'verbose_name': 'Collaboratore',
                'verbose_name_plural': 'Collaboratori',
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('nome_breve', models.CharField(max_length=30, verbose_name='Nome Breve per riferimenti interni')),
                ('nome_it', models.CharField(max_length=40, verbose_name="Nome italiano per l'interfaccia")),
                ('nome_de', models.CharField(max_length=40, verbose_name="Nome tedesco per l'interfaccia")),
                ('descrizione_it', models.TextField(verbose_name='Descrizione italiana per interfaccia')),
                ('descrizione_de', models.TextField(verbose_name='Descrizione tedesca per interfaccia')),
                ('colore', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventi',
            },
        ),
        migrations.CreateModel(
            name='EventoSegnalazione',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('anno', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.anno', verbose_name='Anno di riferimento')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.evento', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Evento - Anno-segnalazione',
                'verbose_name_plural': 'Eventi - Anni - Segnalazioni',
            },
        ),
        migrations.CreateModel(
            name='Intervento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('periodico', models.BooleanField(default=False, verbose_name='Elemento Periodico')),
                ('periodo', models.IntegerField(blank=True, help_text="Numero di giorni successivi alla chiusura dopo i quali ripetere l'elemento", null=True, verbose_name='Periodo')),
                ('cicli', models.IntegerField(blank=True, help_text="Numero di volte che si intende ripetere l'elemento. Se non valorizzato, allora si ripete all'infinito.", null=True, verbose_name='Cicli')),
                ('duplicare', models.BooleanField(default=False, verbose_name='Duplicare elementi sottostanti')),
                ('oggetto', models.CharField(max_length=250, verbose_name='Oggetto')),
                ('descrizione', models.TextField(blank=True, null=True, verbose_name='Descrizione')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('id_RABS', models.CharField(blank=True, null=True, verbose_name='ID D.3 della RABS collegata')),
                ('data_visibilita', models.DateField(default=django.utils.timezone.now, help_text="Data a partire dalla quale l'intervento diventa visibile.", verbose_name='Data di visibilità')),
                ('data_urgente', models.DateField(blank=True, help_text="Data a partire dalla quale l'intervento diventa urgente.", null=True, verbose_name='Data di urgenza')),
                ('data_esecuzione', models.DateField(default=django.utils.timezone.now, help_text="Data a partire dalla quale l'intervento può venire risolto.", verbose_name='Data di esecuzione')),
                ('provvisorio', models.BooleanField(default=False, help_text='Intervento incompleto inserito da sistema', verbose_name='Intervento provvisorio')),
                ('precedente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='gic.intervento', verbose_name='Intervento precedente')),
                ('preposto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.collaboratore', verbose_name="Preposto all'intervento")),
            ],
            options={
                'verbose_name': '',
                'verbose_name_plural': '',
            },
        ),
        migrations.CreateModel(
            name='Lavoro',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('oggetto', models.CharField(max_length=250, verbose_name='Oggetto')),
                ('descrizione', models.TextField(blank=True, null=True, verbose_name='Descrizione')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('durata_prevista', models.DecimalField(decimal_places=2, help_text='Il dato è inserito in ore/uomo.', max_digits=6, verbose_name='Durata prevista')),
                ('accessorio', models.BooleanField(default=False, verbose_name='Lavoro Accessorio')),
                ('urgenza', models.BooleanField(default=False, verbose_name='Lavoro inserito con carattere di urgenza')),
                ('mod_priorita', models.IntegerField(default=0, verbose_name='Modifica manuale della priorità')),
                ('caposquadra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='lavoro_approvato', to='gic.collaboratore', verbose_name='Caposquadra che ha verificato')),
                ('collaboratore', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.collaboratore', verbose_name='Collaboratore incaricato')),
            ],
            options={
                'verbose_name': 'Intervento',
                'verbose_name_plural': 'Interventi',
            },
        ),
        migrations.CreateModel(
            name='Mansione',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('nome_breve', models.CharField(max_length=30, verbose_name='Nome Breve per riferimenti interni')),
                ('nome_it', models.CharField(max_length=40, verbose_name="Nome italiano per l'interfaccia")),
                ('nome_de', models.CharField(max_length=40, verbose_name="Nome tedesco per l'interfaccia")),
                ('descrizione_it', models.TextField(verbose_name='Descrizione italiana per interfaccia')),
                ('descrizione_de', models.TextField(verbose_name='Descrizione tedesca per interfaccia')),
                ('colore', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
            ],
            options={
                'verbose_name': 'Mansione',
                'verbose_name_plural': 'Mansioni',
            },
        ),
        migrations.CreateModel(
            name='Priorita',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('nome_breve', models.CharField(max_length=30, verbose_name='Nome Breve per riferimenti interni')),
                ('nome_it', models.CharField(max_length=40, verbose_name="Nome italiano per l'interfaccia")),
                ('nome_de', models.CharField(max_length=40, verbose_name="Nome tedesco per l'interfaccia")),
                ('descrizione_it', models.TextField(verbose_name='Descrizione italiana per interfaccia')),
                ('descrizione_de', models.TextField(verbose_name='Descrizione tedesca per interfaccia')),
                ('colore', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
                ('valore', models.IntegerField(verbose_name='Valore della Priorità')),
            ],
            options={
                'verbose_name': 'Priorità',
                'verbose_name_plural': 'Priorità',
            },
        ),
        migrations.CreateModel(
            name='Squadra',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('nome_breve', models.CharField(max_length=30, verbose_name='Nome Breve per riferimenti interni')),
                ('nome_it', models.CharField(max_length=40, verbose_name="Nome italiano per l'interfaccia")),
                ('nome_de', models.CharField(max_length=40, verbose_name="Nome tedesco per l'interfaccia")),
                ('descrizione_it', models.TextField(verbose_name='Descrizione italiana per interfaccia')),
                ('descrizione_de', models.TextField(verbose_name='Descrizione tedesca per interfaccia')),
                ('colore', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
            ],
            options={
                'verbose_name': 'Squadra',
                'verbose_name_plural': 'Squadre',
            },
        ),
        migrations.CreateModel(
            name='Tipologia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('nome_breve', models.CharField(max_length=30, verbose_name='Nome Breve per riferimenti interni')),
                ('nome_it', models.CharField(max_length=40, verbose_name="Nome italiano per l'interfaccia")),
                ('nome_de', models.CharField(max_length=40, verbose_name="Nome tedesco per l'interfaccia")),
                ('descrizione_it', models.TextField(verbose_name='Descrizione italiana per interfaccia')),
                ('descrizione_de', models.TextField(verbose_name='Descrizione tedesca per interfaccia')),
                ('colore', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
                ('tipo', models.CharField(choices=[('TO', 'Stato'), ('SO', 'Origine Segnalazione'), ('ST', 'Tipologia Segnalazione'), ('FO', 'Tipologia di Foto'), ('AS', 'Tipologia di assenza'), ('RE', 'Tipologia di Reperibilità')], max_length=2, verbose_name='Stato')),
                ('abbreviazione', models.CharField(max_length=3, verbose_name='Abbreviazione')),
            ],
            options={
                'verbose_name': 'Tipologia',
                'verbose_name_plural': 'Tipologie',
                'unique_together': {('tipo', 'abbreviazione')},
            },
        ),
        migrations.CreateModel(
            name='TempiLavoro',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('inizio', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data e ora di Inizio')),
                ('fine', models.DateTimeField(blank=True, null=True, verbose_name='Data e ora di fine')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Annotazioni')),
                ('lavoro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.lavoro', verbose_name='Lavoro correlato')),
            ],
            options={
                'verbose_name': 'Tempo di lavoro',
                'verbose_name_plural': 'Tempi di lavoro',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('tempo_stimato', models.IntegerField(help_text='Il valore si intende indicato in ore/uomo', verbose_name='Tempo stimato di soluzione')),
                ('tempo_aumento', models.IntegerField(help_text='Tempo dopo il quale la priorità aumenta di grado. Il valore si intende indicato in giornate', verbose_name='Tempo di aumento della priorità')),
                ('attivita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gic.attivita', verbose_name='Attività coinvolta')),
                ('intervento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gic.intervento', verbose_name='Intervento collegato')),
            ],
            options={
                'verbose_name': 'Team di ientervento',
                'verbose_name_plural': 'Teams di intervento',
            },
        ),
        migrations.CreateModel(
            name='Struttura',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('nome_breve', models.CharField(max_length=30, verbose_name='Nome Breve per riferimenti interni')),
                ('nome_it', models.CharField(max_length=40, verbose_name="Nome italiano per l'interfaccia")),
                ('nome_de', models.CharField(max_length=40, verbose_name="Nome tedesco per l'interfaccia")),
                ('descrizione_it', models.TextField(verbose_name='Descrizione italiana per interfaccia')),
                ('descrizione_de', models.TextField(verbose_name='Descrizione tedesca per interfaccia')),
                ('colore', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
                ('indirizzo_it', models.CharField(max_length=150, verbose_name='Indirizzo in italiano')),
                ('indirizzo_de', models.CharField(max_length=150, verbose_name='Indirizzo in tedesco')),
                ('telefono', models.CharField(max_length=15, verbose_name='Numero di telefono')),
                ('cdc', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.cdc', verbose_name='Centro di costo')),
                ('responsabile', models.ForeignKey(limit_choices_to={'responsabile': True}, on_delete=django.db.models.deletion.PROTECT, to='gic.collaboratore', verbose_name='Responsabile di struttura')),
            ],
            options={
                'verbose_name': 'Struttura',
                'verbose_name_plural': 'Strutture',
            },
        ),
        migrations.CreateModel(
            name='Segnalazione',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('periodico', models.BooleanField(default=False, verbose_name='Elemento Periodico')),
                ('periodo', models.IntegerField(blank=True, help_text="Numero di giorni successivi alla chiusura dopo i quali ripetere l'elemento", null=True, verbose_name='Periodo')),
                ('cicli', models.IntegerField(blank=True, help_text="Numero di volte che si intende ripetere l'elemento. Se non valorizzato, allora si ripete all'infinito.", null=True, verbose_name='Cicli')),
                ('duplicare', models.BooleanField(default=False, verbose_name='Duplicare elementi sottostanti')),
                ('oggetto', models.CharField(max_length=250, verbose_name='Oggetto')),
                ('descrizione', models.TextField(blank=True, null=True, verbose_name='Descrizione')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('id_documento', models.CharField(blank=True, null=True, verbose_name='ID D.3 del documento collegato')),
                ('data_pianificazione', models.DateField(verbose_name='Data di pianificazione')),
                ('segnalatore', models.CharField(max_length=250, verbose_name='Nome e cognome del segnalatore')),
                ('email', models.EmailField(blank=True, help_text='Se valorizata, la chiusura della segnalazione invia una risposta.', max_length=254, null=True, verbose_name='E-mail della segnalazione')),
                ('telefono', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefono del segnalatore')),
                ('risposta', models.TextField(blank=True, null=True, verbose_name='Risposta alla segnalazione')),
                ('eventi', models.ManyToManyField(related_name='segnalazioni', through='gic.EventoSegnalazione', to='gic.evento', verbose_name='Eventi collegati')),
                ('origine', models.ForeignKey(limit_choices_to={'tipo': 'SO'}, on_delete=django.db.models.deletion.PROTECT, related_name='segnalazione_origine', to='gic.tipologia', verbose_name='Origine della segnalazione')),
                ('stato', models.ForeignKey(limit_choices_to={'tipo': 'TO'}, on_delete=django.db.models.deletion.PROTECT, to='gic.tipologia', verbose_name="Stato dell'elemento")),
                ('struttura', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.struttura', verbose_name='Struttura di riferimento')),
                ('tipo', models.ForeignKey(limit_choices_to={'tipo': 'ST'}, on_delete=django.db.models.deletion.PROTECT, related_name='segnalazione_tipo', to='gic.tipologia', verbose_name='Tipo di segnalazione')),
            ],
            options={
                'verbose_name': 'Segnalazione',
                'verbose_name_plural': 'Segnalazioni',
            },
        ),
        migrations.AddField(
            model_name='lavoro',
            name='stato',
            field=models.ForeignKey(limit_choices_to={'tipo': 'TO'}, on_delete=django.db.models.deletion.PROTECT, to='gic.tipologia', verbose_name="Stato dell'elemento"),
        ),
        migrations.AddField(
            model_name='lavoro',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.team', verbose_name='Team di intervento collegato'),
        ),
        migrations.AddField(
            model_name='intervento',
            name='priorita',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.priorita', verbose_name='Priorità iniziale'),
        ),
        migrations.AddField(
            model_name='intervento',
            name='segnalazione',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gic.segnalazione', verbose_name='Segnalazione relativa'),
        ),
        migrations.AddField(
            model_name='intervento',
            name='stato',
            field=models.ForeignKey(limit_choices_to={'tipo': 'TO'}, on_delete=django.db.models.deletion.PROTECT, to='gic.tipologia', verbose_name="Stato dell'elemento"),
        ),
        migrations.AddField(
            model_name='intervento',
            name='struttura',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='gic.struttura', verbose_name='Struttura di riferimento'),
        ),
        migrations.CreateModel(
            name='Foto',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('foto', models.ImageField(upload_to='foto/%Y/%m/')),
                ('posizione', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('collaboratore', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.collaboratore', verbose_name='Collaboratore che inserisce la foto')),
                ('intervento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gic.intervento', verbose_name='Intervento collegato')),
                ('tipologia', models.ForeignKey(limit_choices_to={'tipo': 'FO'}, on_delete=django.db.models.deletion.PROTECT, related_name='foto_tipo', to='gic.tipologia', verbose_name='Tipo di foto')),
            ],
            options={
                'verbose_name': 'Foto',
                'verbose_name_plural': 'Foto',
            },
        ),
        migrations.AddField(
            model_name='eventosegnalazione',
            name='segnalazione',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.segnalazione', verbose_name='Segnalazione'),
        ),
        migrations.CreateModel(
            name='CollaboratoreReperibilita',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('data_da', models.DateField(verbose_name='Data inizio validità')),
                ('data_a', models.DateField(blank=True, null=True, verbose_name='Data fine validità')),
                ('collaboratore', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.collaboratore', verbose_name='Collaboratore')),
                ('reperibilita', models.ForeignKey(limit_choices_to={'tipo': 'RE'}, on_delete=django.db.models.deletion.PROTECT, to='gic.tipologia', verbose_name='Tipo di reperibiltà')),
            ],
            options={
                'verbose_name': 'Periodo di reperibilità del Collaboratore',
                'verbose_name_plural': 'Periodi di reperibilità del collaboratore',
            },
        ),
        migrations.CreateModel(
            name='CollaboratoreMansione',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('data_da', models.DateField(verbose_name='Data inizio validità')),
                ('data_a', models.DateField(blank=True, null=True, verbose_name='Data fine validità')),
                ('collaboratore', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.collaboratore', verbose_name='Collaboratore')),
                ('mansione', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.mansione', verbose_name='Mansione')),
            ],
            options={
                'verbose_name': 'Collaboratore - Mansione',
                'verbose_name_plural': 'Collaboratori -Mansioni',
            },
        ),
        migrations.CreateModel(
            name='CollaboratoreAssenza',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('data_da', models.DateField(verbose_name='Data inizio validità')),
                ('data_a', models.DateField(blank=True, null=True, verbose_name='Data fine validità')),
                ('assenza', models.ForeignKey(limit_choices_to={'tipo': 'AS'}, on_delete=django.db.models.deletion.PROTECT, to='gic.tipologia', verbose_name='Tipo di assenza')),
                ('collaboratore', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.collaboratore', verbose_name='Collaboratore')),
            ],
            options={
                'verbose_name': 'Periodo di assenza del Collaboratore',
                'verbose_name_plural': 'Periodi di assenze del collaboratore',
            },
        ),
        migrations.AddField(
            model_name='collaboratore',
            name='assenze',
            field=models.ManyToManyField(related_name='collaboratori_assenze', through='gic.CollaboratoreAssenza', to='gic.tipologia', verbose_name='Periodi di assenza'),
        ),
        migrations.AddField(
            model_name='collaboratore',
            name='dipendente',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='dipendenti.dipendente', verbose_name='Dipendente collegato'),
        ),
        migrations.AddField(
            model_name='collaboratore',
            name='mansioni',
            field=models.ManyToManyField(related_name='collaboratori', through='gic.CollaboratoreMansione', to='gic.mansione', verbose_name='Mansioni assegnate'),
        ),
        migrations.AddField(
            model_name='collaboratore',
            name='reperibilita',
            field=models.ManyToManyField(related_name='collaboratori_reperibilita', through='gic.CollaboratoreReperibilita', to='gic.tipologia', verbose_name='Periodi di reperibilità'),
        ),
        migrations.AddField(
            model_name='collaboratore',
            name='squadra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.squadra', verbose_name='Squadra'),
        ),
        migrations.AddField(
            model_name='attivita',
            name='mansioni',
            field=models.ManyToManyField(related_name='attivita', to='gic.mansione', verbose_name="Mansioni capaci di svolgere l'attività"),
        ),
        migrations.CreateModel(
            name='Annotazione',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('testo', models.TextField(verbose_name='Annotazione')),
                ('lavoro', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gic.lavoro', verbose_name='Lavoro correlato')),
            ],
            options={
                'verbose_name': 'Annotazione al lavoro',
                'verbose_name_plural': 'Annotazioni al lavoro',
            },
        ),
        migrations.CreateModel(
            name='Allegato',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Codice Identificativo')),
                ('data_creazione', models.DateTimeField(auto_now_add=True, verbose_name='Data di creazione')),
                ('data_modifica', models.DateTimeField(auto_now=True, verbose_name='Data di ultima modifica')),
                ('file', models.FileField(upload_to='allegati/%Y/%m/')),
                ('segnalazione', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gic.segnalazione', verbose_name='Segnalazione relativa')),
            ],
            options={
                'verbose_name': 'Allegato alla segnalazione',
                'verbose_name_plural': 'Allegati alla segnalazione',
            },
        ),
    ]
